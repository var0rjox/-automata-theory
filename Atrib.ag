{
type Lista = [String]
type Instancia1 = Instancia
type Instancia2 = Instancia
type String1 = String
type String2 = String
type String3 = String
}

DATA Prog | Prog Metodos Main

DATA Metodos | Metds Metodo Metodos
             | VacioMet

DATA Metodo | Metd Instancia Instancia1 Instancia2 CuerpoMet

DATA Instancia | Instancia Tipo String

DATA Instancias | Instancias Instancia Instancia1
                | VacioInst

DATA CuerpoMet | CuerpoM Expresion
               | CuerpoMCondicional Expresion Funciones Expresion

DATA Funcion | Funcion1 String Mostrar
              | Funcion2 String
              | Funcion3 Instancia String String1 String2

DATA Mostrar | Mostrar String
             | MostrarVacio

DATA Funciones | Funciones Funcion Funciones
               | VacioFuncs

DATA Main | Main Instancias Funciones Int

DATA Tipo | T1
          | T2

DATA Expresion | Expresion Relacion A

DATA A | A Oplog Expresion
       | AVacio

DATA Relacion | Relacion Terminos B

DATA B | B SimpOps Relacion
        | BVacio

DATA C | C SimpOps Terminos
        | CVacio

DATA Terminos | Terminos Fr C

DATA Fr | Fr Expresion
        | Fr1 String
        | Fr2 Int

DATA OpLog | Opmenor
           | Opmayor
           | Opmayorigual
           | Opmenorigual
           | Opdistinto
           | Opigual

DATA SimpOps | Smas
             | Smenos
             | Smul
             | Sdiv


ATTR Prog  [  |  | d:Lista u:Lista cod:String ]
ATTR Metodos [  |  | d:Lista cod:String ]
ATTR Metodo [  |  | d:Lista cod:String]
ATTR Instancia [  |  | d:Lista cod:String ]
ATTR Instancias [  |  | d:Lista cod:String]
ATTR CuerpoMet [  |  | d:Lista cod:String]
ATTR Funcion [  |  | d:Lista cod:String]
ATTR Mostrar [  |  | d:Lista cod:String]
ATTR Funciones [  |  | d:Lista cod:String]
ATTR Main [  |  | d:Lista cod:String]
ATTR Tipo [  |  | d:Lista cod:String]
ATTR Expresion [  |  | d:Lista cod:String]
ATTR A [  |  | d:Lista cod:String]
ATTR B [  |  | d:Lista cod:String]
ATTR C [  |  | d:Lista cod:String]
ATTR Relacion [  |  | d:Lista cod:String]
ATTR Terminos [  |  | d:Lista cod:String]
ATTR Fr [  |  | d:Lista cod:String]
ATTR OpLog [  |  | d:Lista cod:String]
ATTR SimpOps [  |  | d:Lista cod:String]

SEM -- Prog Prog Metodos Main
| Prog  lhs.r = captura @decls.d @intrs.u
      lhs.d = @decls.d 
      lhs.u = @intrs.u
      lhs.cod = "program Pascal;" ++ "\n\n" ++ @metodos.cod  ++ "\n\n"++ @main.cod

SEM Metodos -- Metodo Metodos
| Metds  lhs.r = @metodo.r ++ @metodos.r
        lhs.d = @metodo.d ++ @metodos.d
        lhs.cod = @metodo.cod ++ @metodos.cod
| VacioMet  lhs.r = ""
           lhs.d = ""
           lhs.cod = ""

SEM Metodo Instancia Instancia1 Instancia2 CuerpoMet
| Metd lhs.cod = "function" ++ @instancia.string ++ " ("++ @instancia1.string ", " ++ @instancia2.string ++ ")" @cuerpomet.cod ++ "\n\n"

SEM Instancia Tipo String
| Instancia lhs.cod = @string ++ " : "++ @tipo.cod ++ " ;"

SEM Instancias 
| Instancias Instancia Instancia1
lhs.d = @tipo.string 
| VacioInst

SEM CuerpoMet 
| CuerpoM Expresion
| CuerpoMCondicional Expresion Funciones Expresion

SEM Funciones 
| Funciones --Funcion Funciones
lhs.cod = @funcion.cod ++ " ;" ++@funciones.cod
| VacioFuncs lhs.cod = ""

SEM Funcion
| Funcion1 String Mostrar
lhs.cod = "WriteLn(" ++ @string ++ @mostrar.cod ++ ")"
| Funcion2 String
| Funcion3 Instancia String String1 String2

SEM Mostrar
| Mostrar --String 
lhs.cod = ","++ @string
| MostrarVacio lhs.cod = ""

SEM Main 
| Main --Instancias Funciones Int

SEM Tipo 
| T1 lhs.cod = "Integer"
| T2 lhs.cod = "Real"

SEM Expresion 
| Expresion --Relacion A

SEM A 
| A Oplog --Expresion
| AVacio

SEM Relacion 
| Relacion --Terminos B

SEM B 
| B --SimpOps Relacion
| BVacio

SEM C 
| C --SimpOps Terminos
| CVacio

SEM Terminos 
| Terminos --Fr C

SEM Fr 
| Fr --Expresion
| Fr1 --String
| Fr2 --Int

SEM OpLog 
| Opmenor lhs.cod = "<"
| Opmayor lhs.cod= ">"
| Opmayorigual lhs.cod = ">="
| Opmenorigual lhs.cod = "<="
| Opdistinto lhs.cod = "<>"
| Opigual lhs.cod = "="

SEM SimpOps 
| Smas lhs.cod = "+"
| Smenos lhs.cod = "-"
| Smul lhs.cod = "*"
| Sdiv lhs.cod = "/"
